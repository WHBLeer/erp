<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<T3locallang>
	<data type="array">
		<languageKey index="ch" type="array">
			<label index=".alttitle">工具 &gt;扩展管理器(EM)</label>
			<label index=".description">扩展管理器(EM)</label>
			<label index=".details">TYPO3能在几乎任何方向而不需不稳定的向后的兼容性下被扩展.扩展
API对简单地添加, 消除和开发这样的扩展到TYPO3中提供一个强大的
框架. 这是通过扩展管理器在TYPO3内特别的推动力.
&quot;扩展&quot;是TYPO3的条目它包含两个其它的条目, 插件和模块.
插件是在网页上执行它的任务的一件东西. 例如一个底板, 客户本, 商店
等. 它通常情况附属于一个PHP类并且and 通过一个USER或USER_INT
cObject 从TypoScript中调用. 一个插件是在前台中的一个扩展.
一个模块是一个后台应用程序它有它自己在管理器菜单中的位置的. 它
需要后台登录并且在后台框架中工作.我们可能也叫一些东西模块如果
它开发任何存在模块的连通性, 那就是如果它简单地添加它自己到存在
模块的功能菜单. 一个模块是在后台中的一个扩展.</label>
			<label index="emconf_shy.alttitle">Shy</label>
			<label index="emconf_shy.description">如果设置,扩展通常是在EM中被隐藏,因为它也许是一个默认的扩展或者是一些不重要的东西.</label>
			<label index="emconf_shy.details">如果扩展是“少有兴趣“(它不等同于不重要 - 只是扩展不经常被搜寻...)则使用此标记
并不影响它是否可用.只是在EM中显示.
通常根据TYPO3_CONF_VARS为所有缺省情况下装载的扩展设置“shy“.</label>
			<label index="emconf_category.alttitle">种类</label>
			<label index="emconf_category.description">扩展属于什么种类.</label>
			<label index="emconf_category.details">&lt;b&gt;后台:&lt;/b&gt; 后台 (通常面向后台,但不是一个模块)

&lt;b&gt;模块:&lt;/b&gt; 后台模块 (如果是一个模块和与一块连接)

&lt;b&gt;前台:&lt;/b&gt; 前台 (通常面向前台,但不是一个 “真”插件)

&lt;b&gt;插件:&lt;/b&gt; 前台插件(插件作为一个“插入插件”内容元素被插入 )

&lt;b&gt;杂项:&lt;/b&gt; 杂项元素 (不能轻易被放在其它什么地方)

&lt;b&gt;举例:&lt;/b&gt; 举例扩展 (作为例子等)</label>
			<label index="emconf_dependencies.alttitle">依附于其他扩展?</label>
			<label index="emconf_dependencies.description">这是一个其他扩展键的列表,这个扩展在取决于在它本身之前被装载.</label>
			<label index="emconf_dependencies.details">在将扩展列表写入localconf.php时EM将管理从属关系</label>
			<label index="emconf_conflicts.alttitle">与其它扩展冲突?</label>
			<label index="emconf_conflicts.description">带有此扩展的扩展的扩展键不工作(并且在其它扩展卸载前不能成为可用)</label>
			<label index="emconf_priority.alttitle">请求的装载优先权</label>
			<label index="emconf_priority.description">这告诉EM试着把扩展放到列表的最前.缺省情况下是在最后.</label>
			<label index="emconf_module.alttitle">包含后台模块</label>
			<label index="emconf_module.description">如果至扩展的任何子目录包含后台模块,那些文件夹名称应在此被列出.</label>
			<label index="emconf_module.details">这允许EM获知模块的存在,这很重要.因为EM必须更新模块的conf.php文件来设置正确的TYPO3-MOD_PATH常数.</label>
			<label index="emconf_state.alttitle">开发状态</label>
			<label index="emconf_state.description">扩展在哪个开发状态下.</label>
			<label index="emconf_state.details">&lt;b&gt;alpha&lt;/b&gt;
最初的开发.根本无需做什么.

&lt;b&gt;beta&lt;/b&gt;
正在开发. 部分可以工作但还未完成.

&lt;b&gt;稳定的&lt;/b&gt;
稳定的并且使用在产品中.

&lt;b&gt;实验&lt;/b&gt;
没有人指导将会怎样...可能只是一个想法.

&lt;b&gt;测试&lt;/b&gt;
测试扩展,证明概念等.</label>
			<label index="emconf_internal.alttitle">核心中内部支持</label>
			<label index="emconf_internal.description">此标记标示出扩展的中心源代码.</label>
			<label index="emconf_internal.details">另外说来此标记应该传达此信息“此扩展没有一些核心源代码的修改不
能被写出来”.
一扩展不是内部的就因为它使用了从t3lib/来的TYPO3普通类.
真正不在内部的扩展表现了如此特点它能不更改源代码被书写, 但仅
仅依赖于TYPO3中的类和/或其它扩展, 加上它自己在扩展文件夹中的
原本.</label>
			<label index="emconf_clearCacheOnLoad.alttitle">当安装时清除缓冲</label>
			<label index="emconf_clearCacheOnLoad.description">如果设置,扩展管理器将需要清除缓冲当扩展安装时.</label>
			<label index="emconf_modify_tables.alttitle">现有的表格修改</label>
			<label index="emconf_modify_tables.description">表格命名列表它仅仅被修改而非被完全创建-在此扩展中</label>
			<label index="emconf_modify_tables.details">此列表的表格建立在ext_tables.sql文件的扩展中</label>
			<label index="emconf_private.alttitle">私人的</label>
			<label index="emconf_private.description">如果设置,此版本不会在在线仓库公共列表中显示.</label>
			<label index="emconf_private.details">&quot;私人&quot;上传需要您手动输入一个特别钥匙(当一个上传完成后它将为您
显示)才能输入和观看上传扩展的细节.
当您在内部工作的时候您不想使其他人看到您的工作这是非常好的.
您能在任何时间设置并清除私人标记当您上传您的扩展时.</label>
			<label index="emconf_download_password.alttitle">下载密码</label>
			<label index="emconf_download_password.description">私人扩展下载需要另外的密码.</label>
			<label index="emconf_download_password.details">任何明白&quot;特别钥匙&quot;分配的私人上传的人将能够输入它.在指定输入密码 allows you to give away the download key for private uploads and also require a password given in addition.            此密码能在不久被改变.The password can be changed later on.</label>
			<label index="emconf_type.alttitle">安装类型</label>
			<label index="emconf_type.description">安装的类型</label>
			<label index="emconf_type.details">此对扩展的文件是定位在一个由扩展钥匙命名的文件夹中. 文件夹中的
定位可任意在typo3/sysext/, typo3/ext/或 typo3conf/ext/中. 扩展必
须被规划以至它能自动发觉定位位置并且能在所有3个定位的位置工作.
&lt;b&gt;局部定位“typo3conf/ext/”:&lt;/b&gt; 这是把扩展放置到那里，它对
TYPO3特别安装是局部的.typo3conf/ dir总是局 部的,包含局部配置(例
如localconf.php), 局部模块等. 如果您在此放置一个扩展它仅仅对此
TYPO3安装有用.这是一个&quot;单一-数据库&quot;方法来安装一个扩展.
&lt;b&gt;全局定位“typo3/ext/”:&lt;/b&gt;这是把扩展放置到那里，它对TYPO3
网页服务器上源代码全局的. 此┱苟运??TYPO3安装分享代胧怯杏?
的.当您升级您的TYPO3源代码也许您想复制typo3/ext/目录从以前的
源代码到新的源. 在此以后您能够总是输入TYPO3并按需要升级版本.
这是一个“单一-服务器” 方法来安装一个扩展.
&lt;b&gt;系统定位 “typo3/sysext/”:&lt;/b&gt;这是系统默认的扩展它不能并
不应该被扩展管理器更正.
&lt;b&gt;优先安装&lt;/b&gt;
局部扩展拥有热?且馕蹲湃绻?桓隼┱勾嬖谟趖ypo3conf/ext/和
typo3/ext/两者中那么安装那个在typo3conf/ext/里的那个扩展. 同样全
局扩展比系统扩展拥有优先全. 这意味着扩展在局部-全局-系统中被优先
安装. 结果您因此能有-比方说- 一个&quot;稳定&quot; 的安装在全局显示文件列表
里的一个扩展版本(typo3/ext/) 它是在您服务器上所有的项目中被使用
的源代码, 但在单一实验项目您能输入相同的扩展在新的&quot;实验&quot; 版本下
并且对那个详细的项目局部地有效扩展将被来代替使用.</label>
			<label index="emconf_doubleInstall.alttitle">两次安装或更多?</label>
			<label index="emconf_doubleInstall.description">告诉您是否扩展安装在多个系统中,整体的或局部的位置.</label>
			<label index="emconf_doubleInstall.details">因为一个扩展能位于三个位置,系统,全局和局部, 它表明是否扩展相比当前在其它位置被建立. 在此情况下您应该</label>
			<label index="emconf_rootfiles.alttitle">根文件</label>
			<label index="emconf_rootfiles.description">文件列表扩展文件夹.没有列出子目录的文件.</label>
			<label index="emconf_dbReq.alttitle">数据库要求</label>
			<label index="emconf_dbReq.description">给您展示数据库表格和文件的要求,如果任何.</label>
			<label index="emconf_dbReq.details">这将从ext_tables.sql和ext_tables_static+adt.sql文件中读取并且给您展示那个表格, 文件和静态表格</label>
			<label index="emconf_dbStatus.alttitle">数据库需求状况</label>
			<label index="emconf_dbStatus.description">显示数据库当前状态对扩展需求进行比较.</label>
			<label index="emconf_dbStatus.details">如果扩展被加载且如果一些表格或域不出现它们应该位于的数据库中扩展将被显示并且是错误信息!</label>
			<label index="emconf_flags.alttitle">标记</label>
			<label index="emconf_flags.description">特别代码的一个列表它告诉您TYPO3的一些扩展涉及点.</label>
			<label index="emconf_flags.details">这是一个标记的列表:
&lt;b&gt;模块:&lt;/b&gt;一个真正的主/从模块被建立并被添加.
&lt;b&gt;模块+:&lt;/b&gt;此扩展添加它自己到一个存在的后台模块的功能菜单中.
&lt;b&gt;安装TCA:&lt;/b&gt;此扩展包括一个功能叫做t3lib_div::loadTCA为安
装表格作用的. 这潜在的意味着 系统慢下来了, 因为一些表格的完全描
述总是包括的. 无论如何它也许是对此所发生的一个好的理由. 扩展也许
尝试去扩充现有的表格来操作TCA-配置.
&lt;b&gt;TCA:&lt;/b&gt;此扩展包含在$TCA里的一个表格的配置.
&lt;b&gt;插件:&lt;/b&gt;此扩展添加一个前移的插件到内容元素类型&quot;嵌入擦件&quot;
的插件列表中.
&lt;b&gt;插件/ST43:&lt;/b&gt; TypoScript插件的翻译代码被添加到静态模板&quot;
内容(默认)&quot;中. &quot;插件&quot;和 &quot;插件/ST43
&quot;通常被一起使用.
&lt;b&gt;页面-TSconfig:&lt;/b&gt;默认页面-TSconfig已添加.
&lt;b&gt;用户-TSconfig:&lt;/b&gt;默认用户-TSconfig已添加.
&lt;b&gt;TS/设置:&lt;/b&gt;默认TypoScript设置已添加.
&lt;b&gt;TS/常量:&lt;/b&gt;默认TypoScript常量已添加.</label>
			<label index="emconf_conf.description">显示是否此扩展有一个对更多低水准的配置附和的模板</label>
			<label index="emconf_TSfiles.alttitle">静态TypoScript文件</label>
			<label index="emconf_TSfiles.description">显示哪个TypoScript静态文件可以呈现</label>
			<label index="emconf_TSfiles.details">如果文件ext_typoscript_constants.txt和/或ext_typoscript_setup.txt 在扩展文件夹中已建立,它们是在包含其它静态模板后包含在TYPO3里所有TypoScript模板的层次上.</label>
			<label index="emconf_locallang.alttitle">locallang文件</label>
			<label index="emconf_locallang.description">显示哪些以&quot;locallang.php&quot; 命名的文件显示在扩展文件夹中(返回查寻).此类文件通常以系统语言为应用程序显示一个带标签的数组$LOCAL_LANG.</label>
			<label index="emconf_moduleNames.alttitle">后台模块名称</label>
			<label index="emconf_moduleNames.description">显示哪些模块名称在扩展中被发现.</label>
			<label index="emconf_classNames.alttitle">PHP类名称</label>
			<label index="emconf_classNames.description">显示哪些PHP-类在.php和.inc文件中被发现.</label>
			<label index="emconf_errors.alttitle">错误</label>
			<label index="emconf_errors.description">显示是否发现了任何扩展的严重错误.</label>
			<label index="emconf_NSerrors.alttitle">名称空间错误</label>
			<label index="emconf_NSerrors.description">某些命名协定应用于扩展. 这显示任何发现了的非法命名.</label>
			<label index="emconf_NSerrors.details">命名协定在&quot;Inside TYPO3&quot; 文档中定义.为了使命名尽可能的简单,试着在您的扩展键中避免下划线.</label>
		</languageKey>
	</data>
	<orig_hash type="array">
		<languageKey index="ch" type="array">
			<label index=".alttitle" type="integer">217593800</label>
			<label index=".description" type="integer">212219576</label>
			<label index=".details" type="integer">130449459</label>
			<label index="emconf_shy.alttitle" type="integer">217108965</label>
			<label index="emconf_shy.description" type="integer">196807582</label>
			<label index="emconf_shy.details" type="integer">15892463</label>
			<label index="emconf_category.alttitle" type="integer">61717939</label>
			<label index="emconf_category.description" type="integer">204987594</label>
			<label index="emconf_category.details" type="integer">78942816</label>
			<label index="emconf_dependencies.alttitle" type="integer">6158334</label>
			<label index="emconf_dependencies.description" type="integer">262753637</label>
			<label index="emconf_dependencies.details" type="integer">209360491</label>
			<label index="emconf_conflicts.alttitle" type="integer">174778315</label>
			<label index="emconf_conflicts.description" type="integer">14159431</label>
			<label index="emconf_priority.alttitle" type="integer">208790249</label>
			<label index="emconf_priority.description" type="integer">261230598</label>
			<label index="emconf_module.alttitle" type="integer">222311525</label>
			<label index="emconf_module.description" type="integer">131352939</label>
			<label index="emconf_module.details" type="integer">16797237</label>
			<label index="emconf_state.alttitle" type="integer">8968835</label>
			<label index="emconf_state.description" type="integer">48322308</label>
			<label index="emconf_state.details" type="integer">80752734</label>
			<label index="emconf_internal.alttitle" type="integer">252258090</label>
			<label index="emconf_internal.description" type="integer">130243565</label>
			<label index="emconf_internal.details" type="integer">150689078</label>
			<label index="emconf_clearCacheOnLoad.alttitle" type="integer">26668595</label>
			<label index="emconf_clearCacheOnLoad.description" type="integer">149991239</label>
			<label index="emconf_modify_tables.alttitle" type="integer">211801845</label>
			<label index="emconf_modify_tables.description" type="integer">225814359</label>
			<label index="emconf_modify_tables.details" type="integer">250561664</label>
			<label index="emconf_private.alttitle" type="integer">75468930</label>
			<label index="emconf_private.description" type="integer">8590515</label>
			<label index="emconf_private.details" type="integer">183041250</label>
			<label index="emconf_download_password.alttitle" type="integer">102196861</label>
			<label index="emconf_download_password.description" type="integer">120757501</label>
			<label index="emconf_download_password.details" type="integer">92160698</label>
			<label index="emconf_type.alttitle" type="integer">121209022</label>
			<label index="emconf_type.description" type="integer">113056504</label>
			<label index="emconf_type.details" type="integer">153278607</label>
			<label index="emconf_doubleInstall.alttitle" type="integer">262159324</label>
			<label index="emconf_doubleInstall.description" type="integer">60133779</label>
			<label index="emconf_doubleInstall.details" type="integer">201896892</label>
			<label index="emconf_rootfiles.alttitle" type="integer">234183730</label>
			<label index="emconf_rootfiles.description" type="integer">157844662</label>
			<label index="emconf_dbReq.alttitle" type="integer">28332369</label>
			<label index="emconf_dbReq.description" type="integer">93463627</label>
			<label index="emconf_dbReq.details" type="integer">199359275</label>
			<label index="emconf_dbStatus.alttitle" type="integer">204171626</label>
			<label index="emconf_dbStatus.description" type="integer">166393559</label>
			<label index="emconf_dbStatus.details" type="integer">198198907</label>
			<label index="emconf_flags.alttitle" type="integer">82475009</label>
			<label index="emconf_flags.description" type="integer">42715313</label>
			<label index="emconf_flags.details" type="integer">209778452</label>
			<label index="emconf_conf.description" type="integer">49196456</label>
			<label index="emconf_TSfiles.alttitle" type="integer">43118947</label>
			<label index="emconf_TSfiles.description" type="integer">196469558</label>
			<label index="emconf_TSfiles.details" type="integer">103067229</label>
			<label index="emconf_locallang.alttitle" type="integer">182381040</label>
			<label index="emconf_locallang.description" type="integer">112585123</label>
			<label index="emconf_moduleNames.alttitle" type="integer">70637876</label>
			<label index="emconf_moduleNames.description" type="integer">24342148</label>
			<label index="emconf_classNames.alttitle" type="integer">155053783</label>
			<label index="emconf_classNames.description" type="integer">83027952</label>
			<label index="emconf_errors.alttitle" type="integer">99552371</label>
			<label index="emconf_errors.description" type="integer">57596160</label>
			<label index="emconf_NSerrors.alttitle" type="integer">190879862</label>
			<label index="emconf_NSerrors.description" type="integer">168628900</label>
			<label index="emconf_NSerrors.details" type="integer">76599956</label>
		</languageKey>
	</orig_hash>
	<orig_text type="array">
		<languageKey index="ch" type="array">
			<label index=".alttitle">Tools &gt; Extension Manager (EM)</label>
			<label index=".description">The Extension Manager controls import, installation and upgrading of Extensions in TYPO3.</label>
			<label index=".details">TYPO3 can be extended in nearly any direction without loosing backwards compatibility. The Extension API provides a powerful framework for easily adding, removing, installing and developing such extensions to TYPO3. This is in particular powered by the Extension Manager (EM) inside TYPO3.

&quot;Extensions&quot; is a term in TYPO3 which covers two other terms, plugins and modules.

A plugin is something that plays a role on the website itself. For example a board, guestbook, shop etc. It is normally enclosed in a PHP class and invoked through a USER or USER_INT cObject from TypoScript. A plugin is an extension in the frontend.

A module is a backend application which has it's own position in the administration menu. It requires backend login and works inside the framework of the backend. We might also call something a module if it exploits any connectivity of an existing module, that is if it simply adds itself to the function menu of existing modules. A module is an extension in the backend.</label>
			<label index="emconf_shy.alttitle">Shy</label>
			<label index="emconf_shy.description">If set, the extension will normally be hidden in the EM because it might be a default extension or otherwise something which is not so important.</label>
			<label index="emconf_shy.details">Use this flag if an extension is of &quot;rare interest&quot; (which is not the same as un-important - just an extension not sought for very often...)
It does not affect whether or not it's enabled. Only display in EM.
Normally &quot;shy&quot; is set for all extensions loaded by default according to TYPO3_CONF_VARS.</label>
			<label index="emconf_category.alttitle">Category</label>
			<label index="emconf_category.description">Which category the extension belongs to.</label>
			<label index="emconf_category.details">&lt;b&gt;be:&lt;/b&gt; Backend (Generally backend oriented, but not a module)

&lt;b&gt;module:&lt;/b&gt; Backend modules (When something is a module or connects with one)

&lt;b&gt;fe:&lt;/b&gt; Frontend (Generally frontend oriented, but not a &quot;true&quot; plugin)

&lt;b&gt;plugin:&lt;/b&gt; Frontend plugins (Plugins inserted as a &quot;Insert Plugin&quot; content element)

&lt;b&gt;misc:&lt;/b&gt; Miscellaneous stuff (Where not easily placed elsewhere)

&lt;b&gt;services:&lt;/b&gt; Contains TYPO3 services.

&lt;b&gt;templates:&lt;/b&gt; Contains website templates

&lt;b&gt;doc:&lt;/b&gt; Documentation (Eg. tutorials, FAQ's etc.)

&lt;b&gt;example:&lt;/b&gt; Example extension (Which serves as examples etc.)</label>
			<label index="emconf_dependencies.alttitle">Dependencies of other extensions?</label>
			<label index="emconf_dependencies.description">This is a list of other extension keys which this extension depends on being loaded BEFORE it self.</label>
			<label index="emconf_dependencies.details">The EM will manage that dependency while writing the extension list  to localconf.php. You cannot install an extension unless its dependencies has been installed already.</label>
			<label index="emconf_conflicts.alttitle">Conflicts with other extensions?</label>
			<label index="emconf_conflicts.description">List of extension keys of extensions with which this extension does not work (and so cannot be enabled before those other extensions are un-installed)</label>
			<label index="emconf_priority.alttitle">Requested Loading priority</label>
			<label index="emconf_priority.description">This tells the EM to try to put the extensions as the very first in the list. Default is last.</label>
			<label index="emconf_module.alttitle">Backend modules included</label>
			<label index="emconf_module.description">If any subfolders to an extension contains backend modules, those foldernames should be listed here.</label>
			<label index="emconf_module.details">It allows the EM to know about the existence of the module, which is important because the EM has to update the conf.php file of the module in order to set the correct TYPO3_MOD_PATH  constant.</label>
			<label index="emconf_state.alttitle">Development state</label>
			<label index="emconf_state.description">Which development state the extension is in.</label>
			<label index="emconf_state.details">&lt;b&gt;alpha&lt;/b&gt;
Very initial development. May do nothing at all.

&lt;b&gt;beta&lt;/b&gt;
Under current development. Should work partly but is not finished yet.

&lt;b&gt;stable&lt;/b&gt;
Stable and used in production.

&lt;b&gt;experimental&lt;/b&gt;
Nobody knows if this is going anywhere yet... Maybe still just an idea.

&lt;b&gt;test&lt;/b&gt;
Test extension, demonstrates concepts etc.</label>
			<label index="emconf_internal.alttitle">Internally supported in core</label>
			<label index="emconf_internal.description">This flag indicates that the core source code is specifically aware of the extension.</label>
			<label index="emconf_internal.details">In other words this flag should convey the message that &quot;this extension could not be written without some core source code modifications&quot;.

An extension is not internal just because it uses TYPO3 general classes eg. those from t3lib/.
True non-internal extensions are characterized by the fact that they could be written without making core source code changes, but relies only on existing classes  in TYPO3 and/or other extensions, plus its own scripts in the extension folder.</label>
			<label index="emconf_clearCacheOnLoad.alttitle">Clear cache when installed</label>
			<label index="emconf_clearCacheOnLoad.description">If set, the EM will request the cache to be cleared when this extension is installed.</label>
			<label index="emconf_modify_tables.alttitle">Existing tables modified</label>
			<label index="emconf_modify_tables.description">List of tablenames which are only modified - not fully created - by this extension.</label>
			<label index="emconf_modify_tables.details">Tables from this list found in the ext_tables.sql file of the extension</label>
			<label index="emconf_private.alttitle">Private</label>
			<label index="emconf_private.description">If set, this version is not shown in the public list in the online repository.</label>
			<label index="emconf_private.details">&quot;Private&quot; uploads requires you to manually enter a special key (which will be shown to you after an upload has been completed) to be able to import and view details for the uploaded extension.
This is nice when you are working on something internally which you do not want others to look at.
You can set and clear the private flag every time you upload your extension.</label>
			<label index="emconf_download_password.alttitle">Download password</label>
			<label index="emconf_download_password.description">Additional password required for download of private extensions.</label>
			<label index="emconf_download_password.details">Anybody who knows the &quot;special key&quot; assigned to the private upload will be able to import it. Specifying an import password allows you to give away the download key for private uploads and also require a password given in addition. The password can be changed later on.</label>
			<label index="emconf_type.alttitle">Installation type</label>
			<label index="emconf_type.description">The type of the installation</label>
			<label index="emconf_type.details">The files for an extension are located in a folder named by the extension key. The location of this folder can be either inside typo3conf/ext/,  typo3/ext/ or typo3/sysext/. The extension must be programmed so that it automatically detects where it is located and can work from all three locations.

&lt;b&gt;Local location &quot;typo3conf/ext/&quot;:&lt;/b&gt; This is where to put extensions which are local for a particular TYPO3 installation. The typo3conf/ directory is always local, containing local configuration (eg. localconf.php), local modules etc. If you put an extension here it will be available for this TYPO3 installation only. This is a &quot;per-database&quot; way to install an extension.

&lt;b&gt;Global location &quot;typo3/ext/&quot;:&lt;/b&gt; This is where to put extensions which are global for the TYPO3 source code on the web server. These extensions will be available for any TYPO3 installation sharing the source code.
When you upgrade your TYPO3 source code you probably want to copy the typo3/ext/ directory from the former source to the new source, overriding the default directory. In this way all global extension you use will be installed inside the new sourcecode. After that you can always enter TYPO3 and upgrade the versions if needed.
This is a &quot;per-server&quot; way to install an extension.

&lt;b&gt;System location &quot;typo3/sysext/&quot;:&lt;/b&gt; This is system default extensions which cannot and should not be updated by the EM. They are distributed with the TYPO3 core.


&lt;b&gt;Loading precedence&lt;/b&gt;
Local extensions take precedence which means that if an extension exists both in typo3conf/ext/ and typo3/ext/ the one in typo3conf/ext/ is loaded. Likewise global extension takes predence over system extensions. This means that extensions are loaded in the order of priority local-global-system.
In effect you can therefore have, say, a &quot;stable&quot; version of an extension installed in the global dir (typo3/ext/) which is used by all your projects on a server sharing source code, but on a single experimental project you can import the same extension in a newer &quot;experimental&quot; version and for that particular project the locally available extension will be used instead.</label>
			<label index="emconf_doubleInstall.alttitle">Installed twice or more?</label>
			<label index="emconf_doubleInstall.description">Tells you if the extensions is installed in more than one of the System, Global or Local locations.</label>
			<label index="emconf_doubleInstall.details">Because an extension can reside at three locations, System, Global and Local, this indicates if the extension is found in other locations than the current. In that case you should be aware which one of the extensions is loaded!</label>
			<label index="emconf_rootfiles.alttitle">Root files</label>
			<label index="emconf_rootfiles.description">List of the files in the extension folder. Does not list files in subfolders.</label>
			<label index="emconf_dbReq.alttitle">Database requirements</label>
			<label index="emconf_dbReq.description">Shows you the requirements to the database tables and fields, if any.</label>
			<label index="emconf_dbReq.details">This will read from the files ext_tables.sql and ext_tables_static+adt.sql and show you which tables, fields and static tables are required with this extension.</label>
			<label index="emconf_dbStatus.alttitle">Database requirements status</label>
			<label index="emconf_dbStatus.description">Displays the current status of the database compared to the extension requirements.</label>
			<label index="emconf_dbStatus.details">If the extension is loaded which will display and error message if some tables or fields are not present in the database as they should be!</label>
			<label index="emconf_flags.alttitle">Flags</label>
			<label index="emconf_flags.description">A list of special codes which tells you something about what parts of TYPO3 the extension touches.</label>
			<label index="emconf_flags.details">This is a list of the flags:

&lt;b&gt;Module:&lt;/b&gt; A true backend main/sub module is found to be added.

&lt;b&gt;Module+:&lt;/b&gt; The extension adds itself to the function menu of an existing backend module.

&lt;b&gt;loadTCA:&lt;/b&gt; The extension includes a function call to t3lib_div::loadTCA for loading a table. This potentially means that the system is slowed down, because the full table description of some table is always included. However there probably is a good reason for this to happen. Probably the extension tries to manipulate the TCA-config for an existing table in order to extend it.

&lt;b&gt;TCA:&lt;/b&gt; The extension contains configuration of a table in $TCA.

&lt;b&gt;Plugin:&lt;/b&gt; The extension adds a frontend plugin to the plugin list in Content Element type &quot;Insert Plugin&quot;.

&lt;b&gt;Plugin/ST43:&lt;/b&gt; TypoScript rendering code for the plugin is added to the static template &quot;Content (default)&quot;. &quot;Plugin&quot; and &quot;Plugin/ST43&quot; are commonly used together.

&lt;b&gt;Page-TSconfig:&lt;/b&gt; Default Page-TSconfig is added.

&lt;b&gt;User-TSconfig:&lt;/b&gt; Default User-TSconfig is added.

&lt;b&gt;TS/Setup:&lt;/b&gt; Default TypoScript Setup is added.

&lt;b&gt;TS/Constants:&lt;/b&gt; Default TypoScript Constants is added.</label>
			<label index="emconf_conf.description">Shows if the extension has a template for further lowlevel configuration.</label>
			<label index="emconf_TSfiles.alttitle">Static TypoScript files</label>
			<label index="emconf_TSfiles.description">Shows which TypoScript static files may be present</label>
			<label index="emconf_TSfiles.details">If the files ext_typoscript_constants.txt and/or ext_typoscript_setup.txt is found in the extension folder they are included in the hierarchy of all TypoScript templates in TYPO3 right after the inclusion of other static templates.</label>
			<label index="emconf_locallang.alttitle">locallang-files</label>
			<label index="emconf_locallang.description">Shows which files named &quot;locallang.php&quot; are present in the extension folder (recursive search). Such files are usually used to present an array $LOCAL_LANG with labels for the application in the system languages.</label>
			<label index="emconf_moduleNames.alttitle">Backend Module names</label>
			<label index="emconf_moduleNames.description">Shows which module names were found inside the extension.</label>
			<label index="emconf_classNames.alttitle">PHP Class names</label>
			<label index="emconf_classNames.description">Shows which PHP-classes were found in .php and .inc files.</label>
			<label index="emconf_errors.alttitle">Errors</label>
			<label index="emconf_errors.description">Displays if any errors with the extension were discovered.</label>
			<label index="emconf_NSerrors.alttitle">Namespace errors</label>
			<label index="emconf_NSerrors.description">Certain naming convensions apply to extensions. This displays any violations found.</label>
			<label index="emconf_NSerrors.details">The naming convensions are defined in the &quot;Inside TYPO3&quot; document. To make naming as simple as possible, try to avoid underscores in your extension keys.</label>
		</languageKey>
	</orig_text>
</T3locallang>
