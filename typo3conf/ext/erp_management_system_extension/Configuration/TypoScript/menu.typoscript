#######################
#### LANGUAGE MENU ####
#######################
lib.language = COA
lib.language {
	###################################################
	#### EXAMPLE FOR TYPOSCRIPT LANGUAGE OVERRIDES ####
	#### its not needed in this example            ####
	###################################################
	10 = TEXT
	10 {
		value = CH
		value.lang.en = EN
		wrap = <a href="#" class="dropdown-toggle" data-toggle="dropdown">|</a>
	}

	20 = HMENU
	20 {
		wrap = <ul class="dropdown-menu">|</ul>
		addQueryString = 1
		addQueryString.exclude = id, L, cHash
		special = language
		special.value = 0,1
		special.normalWhenNoLanguage = 0
		1 = TMENU
		1 {
			noBlur = 1
			NO = 0 #set Current language
			NO {
			allWrap = <li>|</li>|*|<li>|</li>|*|<li class="last">|</li>
			stdWrap.setCurrent = CH || EN
			stdWrap.current = 1
			}
			
			#### NO TRANSLATION AVAILABLE STATES ####
			#USERDEF1 < .NO
			#USERDEF1 {
			#    linkWrap = |
			#    doNotShowLink = 1
			#}
		}
	}
}

####################
#### NAVIGATION ####
####################
lib.navigation.main = COA
lib.navigation.main {
    10 = HMENU
    10 {
        1 = TMENU
        1 {
            expAll = 1
            noBlur = 1
            wrap =<ul class="metismenu mm-show" id="side-menu">|</ul>
            # normal 一级
            NO = 1
            NO {
                ATagTitle.field = abstract // description // title
                ATagBeforeWrap = 1
                wrapItemAndSub = <li>|</li>
                wrapItemAndSub.insertData = 1                
                stdWrap.dataWrap = <i class="{field:icon}"></i><span>|</span>
                ATagParams.dataWrap = class="waves-effect"
            }
            # active 一级选中
            ACT < .NO
            ACT {
                wrapItemAndSub = <li>|</li>
                stdWrap.dataWrap = <i class="{field:icon}"></i><span>|</span>
                ATagParams.dataWrap = class="waves-effect mm-active"
            }

            # normal 二级父级
            IFSUB < .NO
            IFSUB {
                wrapItemAndSub = <li>|</li>
                stdWrap.dataWrap = <i class="{field:icon}"></i><span>|</span><span class="float-right menu-arrow"><i class="mdi mdi-chevron-right"></i></span>
                ATagParams.dataWrap = class="waves-effect" aria-expanded="false"
                ATagBeforeWrap = 1
            }
            # active 二级父级选中
            ACTIFSUB < .ACT
            ACTIFSUB {
                wrapItemAndSub = <li>|</li>
                stdWrap.dataWrap = <i class="{field:icon}"></i><span>|</span><span class="float-right menu-arrow"><i class="mdi mdi-chevron-right"></i></span>
                ATagParams.dataWrap = class="waves-effect mm-active" aria-expanded="true"
            }
            stdWrap.debugData=1
        }
        
        # 二级菜单ti-flickr
        2 < .1
        2 {
            wrap = |
            stdWrap.dataWrap = <ul class="submenu mm-collapse" >|</ul>
            NO = 1
            NO {
                wrapItemAndSub = <li>|</li>
                stdWrap.wrap = <i class="ti-flickr sub-icon"></i><span>|</span>
                stdWrap.htmlSpecialChars = 1
                ATagBeforeWrap = 1
                ATagTitle.field = title
            }
            ACT < .NO
            ACT {
                wrapItemAndSub = <li>|</li>
                ATagParams.dataWrap = class="mm-active"
            }
            IFSUB = 1
            IFSUB {
                wrapItemAndSub = <li>|</li>
            }
            ACTIFSUB = 1
            ACTIFSUB {
                wrapItemAndSub = <li>|</li>
                stdWrap.wrap = <i class="ti-flickr sub-icon"></i><span>|</span>
                ATagParams.dataWrap = class="mm-active"
            }
        }
    }
}


#######################
#### SUBNAVIGATION ####
#######################
lib.navigation.subnavigation = COA
lib.navigation.subnavigation {
	10 = HMENU
	10 {
		wrap = <ul class="c-sidebar-menu collapse " id="sidebar-menu-1"><li class="c-dropdown c-active c-open"><a href="javascript:;" class="c-toggler">{leveltitle:1}<span class="c-arrow"></span></a>|</li></ul>
		wrap.insertData = 1
		entryLevel = 1
		1 = TMENU
		1 {
			wrap = <ul class="c-dropdown-menu">|</ul>
			expAll = 1
			noBlur = 1
			NO = 1
			NO {
			ATagTitle.field = abstract // description // title
			#allWrap = <li>|</li>
			#stdWrap.innerWrap = <span class="fa fa-angle-right"></span>|
			wrapItemAndSub = <li>|</li>
			#stdWrap.case = upper
			}
			IFSUB < .NO
			IFSUB = 1
			IFSUB.wrapItemAndSub = <li class="c-dropdown c-open">|</li>
			IFSUB.ATagParams = class="c-toggler"
			IFSUB.stdWrap.innerWrap = |<span class="c-arrow"></span>
			ACT < .NO
			ACT = 1
			ACT.wrapItemAndSub = <li class="c-active">|</li>
			ACTIFSUB < .IFSUB
			ACTIFSUB = 1
			ACTIFSUB.wrapItemAndSub = <li class="c-dropdown c-active c-open">|</li>
			
			CUR < .ACT
		}
		2 < .1
	}
}

#############
#### BCN ####
#############
lib.navigation.breadcrumb = COA
lib.navigation.breadcrumb {
	required = 1
	#wrap =
	10 = HMENU
	10 {
		special = rootline
		special.range = 0|-1
		includeNotInMenu = 1
		1 = TMENU
		1 {
			noBlur = 1
			target = _self
			wrap = <ol class="breadcrumb">当前位置：|</ol>
			NO = 1
			NO {
				stdWrap.field = title
				ATagTitle.field = nav_title // title
				wrapItemAndSub = <li class="breadcrumb-item">|</li>
				doNotLinkIt = 1
				doNotLinkIt.if {
				value.field = doktype
				equals = 4
				}
			}
			
			CUR = 1
			CUR {
				stdWrap.field = title
				doNotLinkIt = 1
				wrapItemAndSub = <li class="breadcrumb-item active">|</li>
			}
		}
	}
}

#[treeLevel = 0] || [treeLevel = 1]
#lib.navigation.breadcrumb >
#[end]

##############
### FOOTER ###
##############
lib.navigation.footer = COA
lib.navigation.footer {
	10 = HMENU
	10 {
		special = directory
		special.value = 12
		1 = TMENU
		1 {
			noBlur = 1
			wrap =
			NO {
				allWrap = <li>|</li>
				ATagParams.dataWrap = title='{field:title}'
				stdWrap.htmlSpecialChars = 1
			}
			
			ACT < .NO
			ACT = 1
			ACT.ATagParams.dataWrap := appendString(class='current')
			#ACT.linkWrap = <li class="current">|&nbsp;&nbsp;&#124;</li>|*||*|<li class="current">|</li>
		}
	}
}